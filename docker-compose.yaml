services:
  webapp:
    image: webapp:latest
    container_name: webapp
    ports:
      - 3000:80
    depends_on:
      - api-orders
      - mariadb
    build:
      context: ./webapp
      dockerfile: Dockerfile
    volumes:
      - ./webapp:/webapp
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app_network

  api-orders:
    image: api-orders:latest
    container_name: api-orders
    ports:
      - 5001:5001
    build:
      context: ./api.orders
      dockerfile: Dockerfile
    depends_on:
      - mariadb
    volumes:
      - ./api.orders:/api.orders
    environment:
      CHOKIDAR_USEPOLLING: true
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: mariadb
      MYSQL_PORT: 3306
    networks:
      - app_network
  
  mariadb:
    image: mariadb:10.2
    container_name: mariadb
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: marz
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    restart: on-failure
    volumes:
     - ./db/schema.sql:/docker-entrypoint-initdb.d/1.sql
     - ./db/data.sql:/docker-entrypoint-initdb.d/2.sql
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p changeme"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  app_network:
    driver: bridge
