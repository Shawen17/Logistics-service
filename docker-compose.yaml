services:
  webapp:
    image: webapp:latest
    container_name: webapp
    ports:
      - 3000:80
    depends_on:
      - api-orders
      - mariadb
    build:
      context: ./webapp
      dockerfile: Dockerfile
    volumes:
      - ./webapp:/webapp
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app_network

  metrics-server:
    image: metrics-server:latest
    container_name: metrics-server
    build:
      context: ./webapp
      dockerfile: Dockerfile.metrics
    ports:
      - 3002:3002
    networks:
      - app_network

  api-orders:
    image: api-orders:latest
    container_name: api-orders
    ports:
      - 5001:5001
    build:
      context: ./api.orders
      dockerfile: Dockerfile
    depends_on:
      - mariadb
      - redis-cache
    volumes:
      - ./api.orders:/api.orders
    environment:
      CHOKIDAR_USEPOLLING: true
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: mariadb
      MYSQL_PORT: 3306
      REDIS_HOST: ${REDIS_HOST}
    networks:
      - app_network

  mariadb:
    image: mariadb:10.2
    container_name: mariadb
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: marz
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    restart: on-failure
    volumes:
      - ./db/data.sql:/docker-entrypoint-initdb.d/1.sql
      - shawen_data:/var/lib/mysql
      - ./order_data.csv:/var/lib/mysql/tmp/order_data.csv
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  mysqld_exporter:
    image: quay.io/prometheus/mysqld-exporter
    container_name: mysqld_exporter
    environment:
      - DATA_SOURCE_NAME=monitoring_user:${MYSQL_PASSWORD}@tcp(mariadb:3306)/
    ports:
      - 9104:9104
    volumes:
      - ./.my.cnf:/etc/mysql/.my.cnf
    command: ["--config.my-cnf=/etc/mysql/.my.cnf"]
    networks:
      - app_network
    depends_on:
      mariadb:
        condition: service_healthy


  redis-cache:
    image: redis
    container_name: redis-container
    ports:
      - 6379:6379
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - app_network


  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    ports:
      - 9121:9121
    environment:
      REDIS_ADDR: "redis://redis-container:6379"
    depends_on:
      - redis-cache
    networks:
      - app_network

  

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    networks:
      - app_network
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    ports:
      - 9090:9090
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3001:3000
    networks:
      - app_network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana


volumes:
  grafana-storage:
  shawen_data:

networks:
  app_network:
    driver: bridge
